spring:

  security:
    oauth2:
      resourceserver:
        jwt:
          public-key-location: classpath:local-public-key.pub

  datasource:
    url: 'jdbc:h2:mem:manage-offences-db;MODE=PostgreSQL;INIT=create domain if not exists jsonb as json'
    username: manage_offences
    password: dummy

  flyway:
    locations: classpath:/migration/h2,classpath:/migration/common
    url: ${spring.datasource.url}
    user: manage_offences
    password: dummy

  h2:
    console:
      enabled: true

  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        jdbc:
          batch_size: 100

  sql:
    init:
      continue-on-error: true

server:
  shutdown: immediate

management.endpoint:
  health.cache.time-to-live: 0
  info.cache.time-to-live: 0

# Wiremock auth server
hmpps:
  auth:
    url: http://localhost:8334/auth

api:
  base:
    url:
      sdrs: http://localhost:8332
      prison:
        api: http://localhost:8333

system:
  client:
    id: manage-offences-api-admin
    secret: client_secret

aws:
  region: "eu-west-1"
  accessKeyId: "access_key"
  secretAccessKey: "secret"
